table(data.val$regimp)
# Partitioning data.val patients by risk group
fit.final <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd + age + extloc:age, data = data.vs, method = 'breslow')
risk.val <- predict(fit.final, newdata = data.val, type = "lp")
low.risk <- which(risk.val < quantile(risk.val, probs = 1/3))
med.risk <- which(quantile(risk.val, probs = 1/3) <= risk.val & risk.val < quantile(risk.val, probs = 2/3))
high.risk <- which(risk.val >= quantile(risk.val, probs = 2/3))
data.val$risk = "1"
data.val$risk[med.risk] = "2"
data.val$risk[high.risk] = "3"
# prediction of KM curves # = average of the predicted survival curves within each group
predict(fit.final, newdata = data.val, type = "survival")
max.time = max(data.val$time_dea) # 4755
pred_surv = data.frame(t=1:max.time, low_risk = 0, med_risk = 0, high_risk = 0)
for(t in 1:max(data.val$time_dea)){
pred <- predict(fit.final, newdata = data.val %>% mutate(time_dea = t), type = "survival")
pred_surv$low_risk[t] = mean(pred[low.risk])
pred_surv$med_risk[t] = mean(pred[med.risk])
pred_surv$high_risk[t] = mean(pred[high.risk])
}
# KM plots #
fit.val <- survfit(Surv(time_dea, status_dea) ~ risk, data = data.val)
plot(fit.val, col = 1:3, xlab = "Days", ylab = "Survival Probability")
lines(pred_surv$t, pred_surv$low_risk, lty = 2, col=1)
lines(pred_surv$t, pred_surv$med_risk, lty = 2, col=2)
lines(pred_surv$t, pred_surv$high_risk,lty = 2, col=3)
pred_surv
pred
pred_surv
# KM plots #
fit.val <- survfit(Surv(time_dea, status_dea), data = data.val)
# KM plots #
fit.val <- survfit(Surv(time_dea, status_dea), data = data.val)
# KM plots #
fit.val <- survfit(Surv(time_dea, status_dea) ~ risk, data = data.val)
# KM plots #
fit.val <- survfit(Surv(time_dea, status_dea) ~ 1, data = data.val)
plot(fit.val, col = 1:3, xlab = "Days", ylab = "Survival Probability")
# KM plots #
fit.val <- survfit(Surv(time_dea, status_dea) ~ 1, data = data.val)
# KM plots #
fit.val <- survfit(Surv(time_dea, status_dea) ~ treat, data = data.val)
# KM plots #
fit.val <- survfit(Surv(time_dea, status_dea) ~ 1, data = data.val)
plot(fit.val, col = 1:3, xlab = "Days", ylab = "Survival Probability")
# KM plots #
fit.val <- survfit(Surv(time_dea, status_dea) ~ treat, data = data.val)
plot(fit.val, col = 1:3, xlab = "Days", ylab = "Survival Probability")
# KM plots #
fit.val <- survfit(Surv(time_dea, status_dea) ~ 0, data = data.val)
plot(fit.val, col = 1:3, xlab = "Days", ylab = "Survival Probability")
# KM plots #
fit.val <- survfit(Surv(time_dea, status_dea) ~ ., data = data.val)
plot(fit.val, col = 1:3, xlab = "Days", ylab = "Survival Probability")
# KM plots #
fit.val <- survfit(Surv(time_dea, status_dea) ~ regimp, data = data.val)
plot(fit.val, col = 1:3, xlab = "Days", ylab = "Survival Probability")
lines(pred_surv$t, mean(pred_surv$low_risk + pred_surv$med_risk + pred_surv$high_risk), lty = 2, col=1)
pred_surv$t
mean(pred_surv$low_risk + pred_surv$med_risk + pred_surv$high_risk)
pmean(pred_surv$low_risk + pred_surv$med_risk + pred_surv$high_risk)
lines(pred_surv$t, (pred_surv$low_risk + pred_surv$med_risk + pred_surv$high_risk)/3, lty = 2, col=1)
# KM plots #
fit.val <- survfit(Surv(time_dea, status_dea) ~ 1, data = data.val)
fit.val
plot(fit.val, col = 1:3, xlab = "Days", ylab = "Survival Probability")
# KM plots #
fit.val <- survfit(Surv(time_dea, status_dea) ~ 1, data = data.val)
fit.val
plot(fit.val, col = 1, xlab = "Days", ylab = "Survival Probability")
lines(pred_surv$t, (pred_surv$low_risk + pred_surv$med_risk + pred_surv$high_risk)/3, lty = 2, col=2)
# KM plots #
fit.val <- survfit(Surv(time_dea, status_dea) ~ risk, data = data.val)
plot(fit.val, col = 1:3, xlab = "Days", ylab = "Survival Probability")
lines(pred_surv$t, pred_surv$low_risk, lty = 2, col=1)
lines(pred_surv$t, pred_surv$med_risk, lty = 2, col=2)
lines(pred_surv$t, pred_surv$high_risk,lty = 2, col=3)
legend(x = 0, y = .3, title="Observed", legend = c("Low risk", "Medium risk", "High risk"), lty = 1, bty = "n", border = F, col = 1:3)
legend(x = 1000, y = .3, title="Expected", legend = c("Low risk", "Medium risk", "High risk"), lty = 2, bty = "n", border = F, col = 1:3)
# Cox PH PMLE
fit.final.total <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd + age + extloc:age, data = rbind(data.vs, data.val), method = 'breslow')
data.val
data.vs
# Cox PH PMLE
fit.final.total <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd + age + extloc:age, data = rbind(data.vs, data.val %>% select(-risk)), method = 'breslow')
summary(fit.final.total)
fit.final.val <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd + age + extloc:age, data = data.val, method = 'breslow')
summary(fit.final.val)
fit.final.val <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd + age + extloc:age,
data = data.val, method = 'breslow')
summary(fit.final.val)
# Cox PH PMLE on Total dataset
fit.final.total <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd + age + extloc:age,
data = rbind(data.vs, data.val %>% select(-risk)), method = 'breslow')
summary(fit.final.total)
fit.final <- coxph(Surv(time_dea, status_dea) ~ treat + regimp + log_noposnd + age, data = data.vs, method = 'breslow')
risk.val <- predict(fit.final, newdata = data.val, type = "lp")
low.risk <- which(risk.val < quantile(risk.val, probs = 1/3))
med.risk <- which(quantile(risk.val, probs = 1/3) <= risk.val & risk.val < quantile(risk.val, probs = 2/3))
high.risk <- which(risk.val >= quantile(risk.val, probs = 2/3))
data.val$risk = "1"
data.val$risk[med.risk] = "2"
data.val$risk[high.risk] = "3"
# prediction of KM curves # = average of the predicted survival curves within each group
predict(fit.final, newdata = data.val, type = "survival")
max.time = max(data.val$time_dea) # 4755
pred_surv = data.frame(t=1:max.time, low_risk = 0, med_risk = 0, high_risk = 0)
for(t in 1:max(data.val$time_dea)){
pred <- predict(fit.final, newdata = data.val %>% mutate(time_dea = t), type = "survival")
pred_surv$low_risk[t] = mean(pred[low.risk])
pred_surv$med_risk[t] = mean(pred[med.risk])
pred_surv$high_risk[t] = mean(pred[high.risk])
}
# KM plots #
fit.val <- survfit(Surv(time_dea, status_dea) ~ risk, data = data.val)
plot(fit.val, col = 1:3, xlab = "Days", ylab = "Survival Probability")
lines(pred_surv$t, pred_surv$low_risk, lty = 2, col=1)
lines(pred_surv$t, pred_surv$med_risk, lty = 2, col=2)
lines(pred_surv$t, pred_surv$high_risk,lty = 2, col=3)
legend(x = 0, y = .3, title="Observed", legend = c("Low risk", "Medium risk", "High risk"), lty = 1, bty = "n", border = F, col = 1:3)
legend(x = 1000, y = .3, title="Expected", legend = c("Low risk", "Medium risk", "High risk"), lty = 2, bty = "n", border = F, col = 1:3)
library(survminer)
install.packages("survminer")
fit.final
# Cox PH PMLE
fit.final <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd + age + extloc:age, data = data.vs, method = 'breslow')
fit.final
ggcoxzph(fit.final)
# install.packages("survminer")
library(survminer)
ggcoxzph(fit.final)
fit.final <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd + age + extloc:age, data = data.vs, method = 'breslow')
ggcoxzph(fit.final)
ggcoxzph(cox.zph(fit.final))
ggcoxdiagnostics(cox.zph(fit.final))
ggcoxdiagnostics(fit.final)
ggcoxfunctional(cox.zph(fit.final))
ggcoxfunctional(fit.final)
ggcoxfunctional(coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd + age + extloc:age, data = data.vs),
data = data.vs)
res.cox <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd + age + extloc:age, data = data.vs)
ggcoxfunctional(res.cox, data = data.vs)
ggcoxfunctional(res.cox, data = data.vs, point.col = "blue", point.alpha = 0.5)
library(survival)
data(mgus)
res.cox <- coxph(Surv(futime, death) ~ mspike + log(mspike) + I(mspike^2) +
age + I(log(age)^2) + I(sqrt(age)), data = mgus)
ggcoxfunctional(res.cox,  data = mgus, point.col = "blue", point.alpha = 0.5)
ggcoxfunctional(res.cox, data = mgus, point.col = "blue", point.alpha = 0.5,
title = "Pass the title", caption = "Pass the caption")
res.cox <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd + age, data = data.vs)
ggcoxfunctional(res.cox, data = data.vs, point.col = "blue", point.alpha = 0.5)
mgus
res.cox
res.cox <- coxph(Surv(futime, death) ~ mspike + log(mspike) + I(mspike^2) +
age + I(log(age)^2) + I(sqrt(age)), data = mgus)
ggcoxfunctional(res.cox,  data = mgus, point.col = "blue", point.alpha = 0.5)
ggcoxfunctional(res.cox, data = mgus, point.col = "blue", point.alpha = 0.5,
title = "Pass the title", caption = "Pass the caption")
res.cox <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd + age, data = data.vs)
ggcoxfunctional(res.cox, data = data.vs, point.col = "blue", point.alpha = 0.5)
ggcoxfunctional(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd + age, data = data.vs, point.col = "blue", point.alpha = 0.5)
ggcoxfunctional(Surv(time_dea, status_dea) ~ treat + extloc + regimp + noposnd + log_noposnd + age + log(age) + I(age^2), data = data.vs, point.col = "blue", point.alpha = 0.5)
res.cox <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + noposnd + log_noposnd + age + log(age) + I(age^2), data = data.vs)
ggcoxfunctional(res.cox, data = data.vs, point.col = "blue", point.alpha = 0.5)
res.cox <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + noposnd + log_noposnd + age + log(age) + I(age^2), data = data.val)
ggcoxfunctional(res.cox, data = data.val, point.col = "blue", point.alpha = 0.5)
res.cox <- coxph(Surv(time_dea, status_dea) ~ noposnd + log_noposnd + age + log(age) + I(age^2), data = data.val)
ggcoxfunctional(res.cox, data = data.val, point.col = "blue", point.alpha = 0.5)
res.cox <- coxph(Surv(futime, death) ~ mspike + log(mspike) + I(mspike^2) +
age + I(log(age)^2) + I(sqrt(age)), data = mgus)
ggcoxfunctional(res.cox,  data = mgus, point.col = "blue", point.alpha = 0.5)
ggcoxfunctional(res.cox, data = mgus, point.col = "blue", point.alpha = 0.5,
title = "Pass the title", caption = "Pass the caption")
res.cox <- coxph(Surv(time_dea, status_dea) ~ noposnd + log_noposnd + age + log(age) + I(age^2) + I(age^3), data = data.val)
ggcoxfunctional(res.cox, data = data.val, point.col = "blue", point.alpha = 0.5)
res.cox <- coxph(Surv(futime, death) ~ mspike + log(mspike) + I(mspike^2) +
age + I(log(age)^2) + I(sqrt(age)), data = mgus)
res.cox$residuals
res.cox$concordance
fit.final <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd + age + extloc:age, data = data.vs, method = 'breslow')
fit.final$residuals
plot(data.vs$treat, fit.final$residuals)
plot(data.vs$extloc, fit.final$residuals)
plot(data.vs$regimp, fit.final$residuals)
# Martingale Residual plot
plot(as.chracter(data.vs$treat), fit.final$residuals)
# Martingale Residual plot
plot(as.character(data.vs$treat), fit.final$residuals)
# Martingale Residual plot
plot(as.factor(data.vs$treat), fit.final$residuals)
plot(as.factor(data.vs$extloc), fit.final$residuals)
plot(as.factor(data.vs$regimp), fit.final$residuals)
plot(data.vs$log_noposnd, fit.final$residuals)
log_noposnd_loess <- loess(fit.final$residuals ~ data.vs$log_noposnd)
log_noposnd_loess
lines(data.vs$log_noposnd, predict(log_noposnd_loess), col = "red")
ggplot(aes(data.vs$log_noposnd, fit.final$residuals)) +
geom_point() +
geom_smooth(method = "loess")
ggplot(data = NULL, aes(data.vs$log_noposnd, fit.final$residuals)) +
geom_point() +
geom_smooth(method = "loess")
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_point()
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_point() +
geom_violin()
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_violin() +
geom_point()
ggplot(data = NULL, aes(data.vs$age, fit.final$residuals)) +
geom_point() +
geom_smooth(method = "loess")
plot(as.factor(data.vs$extloc), fit.final$residuals)
plot(as.factor(data.vs$regimp), fit.final$residuals)
plot(as.factor(data.vs$treat), fit.final$residuals)
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_violin() +
geom_point()
ggplot(data = NULL, aes(data.vs$age, fit.final$residuals)) +
geom_point() +
geom_smooth(method = "loess")
# Age vs log(Age) vs Age^2
fit.age <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd, data = data.vs, method = 'breslow')
ggplot(data = NULL, aes(data.vs$age, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess")
ggplot(data = NULL, aes(log(data.vs$age), fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess")
ggplot(data = NULL, aes((data.vs$age)^2, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess")
library(cowplot)
p1 <- ggplot(data = NULL, aes(data.vs$age, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess")
p2 <- ggplot(data = NULL, aes(log(data.vs$age), fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess")
p3 <- ggplot(data = NULL, aes((data.vs$age)^2, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess")
plot_grid(p1, p2, p3)
plot_grid(p1, p2, p3, nrow = 1)
# noposnd vs log(noposnd) vs noposnd^2
fit.noposnd <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + age, data = data.vs, method = 'breslow')
p1 <- ggplot(data = NULL, aes(data.vs$noposnd, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess")
p2 <- ggplot(data = NULL, aes(log(data.vs$noposnd), fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess")
p3 <- ggplot(data = NULL, aes((data.vs$noposnd)^2, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess")
plot_grid(p1, p2, p3, nrow = 1)
fit.age <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd, data = data.vs, method = 'breslow')
p1 <- ggplot(data = NULL, aes(data.vs$age, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("Age") + ylab("Martingale residual")
p2 <- ggplot(data = NULL, aes(log(data.vs$age), fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("log(Age)") + ylab("Martingale residual")
p3 <- ggplot(data = NULL, aes((data.vs$age)^2, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("Age^2") + ylab("Martingale residual")
plot_grid(p1, p2, p3, nrow = 1)
# noposnd vs log(noposnd) vs noposnd^2
fit.noposnd <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + age, data = data.vs, method = 'breslow')
p1 <- ggplot(data = NULL, aes(data.vs$noposnd, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("Nodal involvement") + ylab("Martingale residual")
p2 <- ggplot(data = NULL, aes(log(data.vs$noposnd), fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("log(Nodal involvement)") + ylab("Martingale residual")
p3 <- ggplot(data = NULL, aes((data.vs$noposnd)^2, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("Nodal involvement^2") + ylab("Martingale residual")
plot_grid(p1, p2, p3, nrow = 1)
fit.final <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd + age + extloc:age, data = data.vs, method = 'breslow')
plot(as.factor(data.vs$treat), fit.final$residuals)
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_violin() +
geom_point()
plot(as.factor(data.vs$extloc), fit.final$residuals)
plot(as.factor(data.vs$regimp), fit.final$residuals)
ggplot(data = NULL, aes(data.vs$log_noposnd, fit.final$residuals)) +
geom_point() +
geom_smooth(method = "loess")
ggplot(data = NULL, aes(data.vs$age, fit.final$residuals)) +
geom_point() +
geom_smooth(method = "loess")
fit.age <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd, data = data.vs, method = 'breslow')
p1 <- ggplot(data = NULL, aes(data.vs$age, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("Age") + ylab("Martingale residual")
p2 <- ggplot(data = NULL, aes(log(data.vs$age), fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("log(Age)") + ylab("Martingale residual")
p3 <- ggplot(data = NULL, aes((data.vs$age)^2, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("Age^2") + ylab("Martingale residual")
plot_grid(p1, p2, p3, nrow = 1)
fit.noposnd <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + age, data = data.vs, method = 'breslow')
p1 <- ggplot(data = NULL, aes(data.vs$noposnd, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("Nodal involvement") + ylab("Martingale residual")
p2 <- ggplot(data = NULL, aes(log(data.vs$noposnd), fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("log(Nodal involvement)") + ylab("Martingale residual")
p3 <- ggplot(data = NULL, aes((data.vs$noposnd)^2, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("Nodal involvement^2") + ylab("Martingale residual")
plot_grid(p1, p2, p3, nrow = 1)
plot(as.factor(data.vs$treat), fit.final$residuals)
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_violin() +
geom_point()
plot(as.factor(data.vs$treat), fit.final$residuals)
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_violin() +
geom_boxplot() +
geom_point()
plot(as.factor(data.vs$treat), fit.final$residuals)
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_violin() +
geom_boxplot(width = 0.1) +
geom_point()
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_violin() +
geom_boxplot(width = 0.1) +
geom_jitter(height = 0, width = 0.1) +
geom_point()
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_violin() +
geom_boxplot(width = 0.1) +
geom_jitter(height = 0, width = 0.1)
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_violin() +
geom_jitter(height = 0, width = 0.1) +
geom_boxplot(width = 0.1)
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_violin() +
geom_jitter(height = 0, width = 0.1) +
geom_boxplot(width = 0.1, alpha = 0.5)
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_violin() +
geom_jitter(height = 0, width = 0.01) +
geom_boxplot(width = 0.1, alpha = 0.5)
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_violin() +
geom_jitter(height = 0, width = 0.1, size = 0.5) +
geom_boxplot(width = 0.1, alpha = 0.5)
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_violin() +
geom_jitter(height = 0, width = 0.1, size = 0.5) +
geom_boxplot(width = 0.1, alpha = 0.5, col = "blue")
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_violin() +
geom_jitter(height = 0, width = 0.1, size = 0.5) +
geom_boxplot(width = 0.1, alpha = 0.5, col = "blue") +
xlab("Treatment") + ylab("Martingale residual")
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_violin() +
geom_jitter(height = 0, width = 0.1, size = 0.5) +
geom_boxplot(width = 0.1, alpha = 0.5, col = "blue") +
xlab("Treatment") + ylab("Martingale residual") +
scale_x_discrete(labels=c("1" = "Observation",
"2" = "Levamisole",
"3" = "5-FU + Lev"))
# Treatment
ggplot(data = NULL, aes(as.factor(data.vs$extloc), fit.final$residuals)) +
geom_violin() +
geom_jitter(height = 0, width = 0.1, size = 0.5) +
geom_boxplot(width = 0.1, alpha = 0.5, col = "blue") +
xlab("Extent of local spread") + ylab("Martingale residual") +
scale_x_discrete(labels=c("1" = "Observation",
"2" = "Levamisole",
"3" = "Levamisole",
"4" = "5-FU + Lev"))
# Treatment
ggplot(data = NULL, aes(as.factor(data.vs$extloc), fit.final$residuals)) +
geom_violin() +
geom_jitter(height = 0, width = 0.1, size = 0.5) +
geom_boxplot(width = 0.1, alpha = 0.5, col = "blue") +
xlab("Extent of local spread") + ylab("Martingale residual") +
scale_x_discrete(labels=c("1" = "Submucosa",
"2" = "Muscular",
"3" = "Serosa",
"4" = "Contiguos"))
# regimp
ggplot(data = NULL, aes(as.factor(data.vs$regimp), fit.final$residuals)) +
geom_violin() +
geom_jitter(height = 0, width = 0.1, size = 0.5) +
geom_boxplot(width = 0.1, alpha = 0.5, col = "blue") +
xlab("Regional implants") + ylab("Martingale residual") +
scale_x_discrete(labels=c("0" = "No",
"1" = "Exists"))
ggplot(data = NULL, aes(data.vs$log_noposnd, fit.final$residuals)) +
geom_point() +
geom_smooth(method = "loess")
# log_noposnd
ggplot(data = NULL, aes(data.vs$log_noposnd, fit.final$residuals)) +
geom_point() +
geom_jitter(height = 0, width = 0.1, size = 0.5) +
geom_smooth(method = "loess") +
xlab("Regional implants") + ylab("Martingale residual")
# log_noposnd
ggplot(data = NULL, aes(data.vs$log_noposnd, fit.final$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("Regional implants") + ylab("Martingale residual")
# log_noposnd
ggplot(data = NULL, aes(data.vs$log_noposnd, fit.final$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("log(Nodal involvement)") + ylab("Martingale residual")
# age
ggplot(data = NULL, aes(data.vs$age, fit.final$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("Age") + ylab("Martingale residual")
ggcoxzph(cox.zph(fit.final))
ggcoxdiagnostics(fit.final)
res.cox <- coxph(Surv(time_dea, status_dea) ~ noposnd + log_noposnd + age + log(age) + I(age^2) + I(age^3), data = data.val)
ggcoxfunctional(res.cox, data = data.val, point.col = "blue", point.alpha = 0.5)
# Age vs log(Age) vs Age^2
fit.age <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + log_noposnd, data = data.vs, method = 'breslow')
p1 <- ggplot(data = NULL, aes(data.vs$age, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("Age") + ylab("Martingale residual")
p2 <- ggplot(data = NULL, aes(log(data.vs$age), fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("log(Age)") + ylab("Martingale residual")
p3 <- ggplot(data = NULL, aes((data.vs$age)^2, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("Age^2") + ylab("Martingale residual")
plot_grid(p1, p2, p3, nrow = 1)
# noposnd vs log(noposnd) vs noposnd^2
fit.noposnd <- coxph(Surv(time_dea, status_dea) ~ treat + extloc + regimp + age, data = data.vs, method = 'breslow')
p1 <- ggplot(data = NULL, aes(data.vs$noposnd, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("Nodal involvement") + ylab("Martingale residual")
p2 <- ggplot(data = NULL, aes(log(data.vs$noposnd), fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("log(Nodal involvement)") + ylab("Martingale residual")
p3 <- ggplot(data = NULL, aes((data.vs$noposnd)^2, fit.age$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("Nodal involvement^2") + ylab("Martingale residual")
plot_grid(p1, p2, p3, nrow = 1)
# Treatment
ggplot(data = NULL, aes(as.factor(data.vs$treat), fit.final$residuals)) +
geom_violin() +
geom_jitter(height = 0, width = 0.1, size = 0.5) +
geom_boxplot(width = 0.1, alpha = 0.5, col = "blue") +
xlab("Treatment") + ylab("Martingale residual") +
scale_x_discrete(labels=c("1" = "Observation",
"2" = "Levamisole",
"3" = "5-FU + Lev"))
# extloc
ggplot(data = NULL, aes(as.factor(data.vs$extloc), fit.final$residuals)) +
geom_violin() +
geom_jitter(height = 0, width = 0.1, size = 0.5) +
geom_boxplot(width = 0.1, alpha = 0.5, col = "blue") +
xlab("Extent of local spread") + ylab("Martingale residual") +
scale_x_discrete(labels=c("1" = "Submucosa",
"2" = "Muscular",
"3" = "Serosa",
"4" = "Contiguos"))
# regimp
ggplot(data = NULL, aes(as.factor(data.vs$regimp), fit.final$residuals)) +
geom_violin() +
geom_jitter(height = 0, width = 0.1, size = 0.5) +
geom_boxplot(width = 0.1, alpha = 0.5, col = "blue") +
xlab("Regional implants") + ylab("Martingale residual") +
scale_x_discrete(labels=c("0" = "No",
"1" = "Exists"))
# log_noposnd
ggplot(data = NULL, aes(data.vs$log_noposnd, fit.final$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("log(Nodal involvement)") + ylab("Martingale residual")
# age
ggplot(data = NULL, aes(data.vs$age, fit.final$residuals)) +
geom_point() +
geom_smooth(method = "loess") +
xlab("Age") + ylab("Martingale residual")
ggcoxzph(cox.zph(fit.final))
ggcoxdiagnostics(fit.final)
ggcoxdiagnostics(fit.final, type = "deviance")
res.cox <- coxph(Surv(time_dea, status_dea) ~ noposnd + log_noposnd + age + log(age) + I(age^2) + I(age^3), data = data.val)
ggcoxfunctional(res.cox, data = data.val, point.col = "blue", point.alpha = 0.5)
